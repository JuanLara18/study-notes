name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Configure Flask for GitHub Pages
        run: |
          # Create a configuration file for GitHub Pages deployment
          echo "FREEZER_BASE_URL = 'https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/'" > app/config.py
          echo "FREEZER_RELATIVE_URLS = False" >> app/config.py
          echo "GITHUB_PAGES = True" >> app/config.py
          
      - name: Build static site
        run: |
          # Ensure build directory exists
          mkdir -p build
          # Generate static site
          flask --app app freeze
          
      - name: Post-process static files
        run: |
          # Fix asset paths in HTML files
          find build -type f -name "*.html" -exec sed -i 's|href="/static/|href="static/|g' {} +
          find build -type f -name "*.html" -exec sed -i 's|src="/static/|src="static/|g' {} +
          find build -type f -name "*.html" -exec sed -i 's|href="/|href="./|g' {} +
          # Create .nojekyll file to prevent GitHub Pages from processing with Jekyll
          touch build/.nojekyll
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2